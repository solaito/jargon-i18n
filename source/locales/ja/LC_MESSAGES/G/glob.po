# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Original Maintainer: Eric S. Raymond, Converted by
# @solaito
# This file is distributed under the same license as the jargon-sphinx
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: jargon-sphinx \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-02 15:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../G/glob.rst:5
msgid "glob"
msgstr ""

#: ../../G/glob.rst:7
msgid "/glob/, not, /glohb/, v\\.,n\\."
msgstr ""

#: ../../G/glob.rst:9
msgid ""
"[Unix; common] To expand special characters in a wildcarded name, or the "
"act of so doing (the action is also called globbing). The Unix "
"conventions for filename wildcarding have become sufficiently pervasive "
"that many hackers use some of them in written English, especially in "
"email or news on technical topics. Those commonly encountered include the"
" following:"
msgstr ""

#: ../../G/glob.rst:15
msgid "\\*"
msgstr ""

#: ../../G/glob.rst:16
msgid "wildcard for any string (see also :ref:`UN-asterisk-X`\\)"
msgstr ""

#: ../../G/glob.rst:17
msgid "?"
msgstr ""

#: ../../G/glob.rst:18
msgid ""
"wildcard for any single character (generally read this way only at the "
"beginning or in the middle of a word)"
msgstr ""

#: ../../G/glob.rst:19
msgid "[]"
msgstr ""

#: ../../G/glob.rst:20
msgid "delimits a wildcard matching any of the enclosed characters"
msgstr ""

#: ../../G/glob.rst:21
msgid "{}"
msgstr ""

#: ../../G/glob.rst:22
msgid ""
"alternation of comma-separated alternatives; thus, ‘foo{baz,qux}’ would "
"be read as ‘foobaz’ or ‘fooqux’"
msgstr ""

#: ../../G/glob.rst:24
msgid ""
"Some examples: \"He said his name was [KC]arl\" (expresses ambiguity). "
"\"I don't read talk.politics.\\*\" (any of the talk.politics subgroups on"
" :ref:`Usenet`\\). Other examples are given under the entry for "
":ref:`X`\\. Note that glob patterns are similar, but not identical, to "
"those used in :ref:`regexp`\\s."
msgstr ""

#: ../../G/glob.rst:29
msgid ""
"Historical note: The jargon usage derives from :code:`glob`\\, the name "
"of a subprogram that expanded wildcards in archaic pre-Bourne versions of"
" the Unix shell."
msgstr ""

