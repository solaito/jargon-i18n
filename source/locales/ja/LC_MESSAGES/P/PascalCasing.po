# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Original Maintainer: Eric S. Raymond, Converted by
# @solaito
# This file is distributed under the same license as the jargon-sphinx
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: jargon-sphinx \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-02 15:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../P/PascalCasing.rst:5
msgid "PascalCasing"
msgstr ""

#: ../../P/PascalCasing.rst:7
msgid ""
"The practice of marking all word boundaries in long identifiers (such as "
"ThisIsASampleVariable) (including the first letter of the identifier) "
"with uppercase. Constrasts with camelCasing, in which the first character"
" of the identifier is left in lowercase (thisIsASampleVariable), and with"
" the traditional C style of short all-lower-case names with internal word"
" breaks marked by an underscore (sample_var)."
msgstr ""

#: ../../P/PascalCasing.rst:10
msgid ""
"Where these terms are used, they usually go with advice to use "
"PascalCasing for public interfaces and camelCasing for private ones. They"
" may have originated at Microsoft, but are in more general use in ECMA "
"standards, among Java programmers, and elsewhere."
msgstr ""

