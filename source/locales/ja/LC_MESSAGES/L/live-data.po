# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Original Maintainer: Eric S. Raymond, Converted by
# @solaito
# This file is distributed under the same license as the jargon-sphinx
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: jargon-sphinx \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-02 15:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../L/live-data.rst:5
msgid "live data"
msgstr ""

#: ../../L/live-data.rst:7
msgid "n\\."
msgstr ""

#: ../../L/live-data.rst:10
msgid ""
"Data that is written to be interpreted and takes over program flow when "
"triggered by some un-obvious operation, such as viewing it. One use of "
"such hacks is to break security. For example, some smart terminals have "
"commands that allow one to download strings to program keys; this can be "
"used to write live data that, when listed to the terminal, infects it "
"with a security-breaking :ref:`virus` that is triggered the next time a "
"hapless user strikes that key. For another, there are some well-known "
"bugs in :ref:`vi` that allow certain texts to send arbitrary commands "
"back to the machine when they are simply viewed."
msgstr ""

#: ../../L/live-data.rst:16
msgid ""
"In C code, data that includes pointers to function :ref:`hook`\\s "
"(executable code)."
msgstr ""

#: ../../L/live-data.rst:19
msgid ""
"An object, such as a :ref:`trampoline`\\, that is constructed on the fly "
"by a program and intended to be executed as code."
msgstr ""

