# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Original Maintainer: Eric S. Raymond, Converted by
# @solaito
# This file is distributed under the same license as the jargon-sphinx
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: jargon-sphinx \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-02 15:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../S/spamblock.rst:5
msgid "spamblock"
msgstr ""

#: ../../S/spamblock.rst:7
msgid "/spam´blok/, n\\."
msgstr ""

#: ../../S/spamblock.rst:9
msgid ""
"[poss. by analogy to sunblock] Text inserted in an email address to "
"render it invalid and thus useless to spammers. For example, the address "
"<jrandom@hacker.org> might be transformed to <jrandom@NOSPAM.hacker.org>."
" Adding spamblock to an address is often referred to as munging it (see "
":ref:`munge`\\). This evasion tactic depends on the fact that most "
"spammers collect names with some sort of :ref:`address-harvester` on "
"volumes too high to de-mung by hand, but individual humans reading an "
"email message can readily spot and remove a spamblock in the From "
"address."
msgstr ""

#: ../../S/spamblock.rst:15
msgid ""
"Note: This is not actually a very effective tactic, and may already be "
"passing out of use in early 1999 after about two years of life. In both "
"mail and news, it's essentially impossible to keep a smart address "
"harvester from mining out the addresses in the message header and trace "
"lines. Therefore the only people who can be protected are third parties "
"mentioned by email address in the message — not a common enough case to "
"interest spammers."
msgstr ""

